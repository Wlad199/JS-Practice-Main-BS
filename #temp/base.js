/*
 Number
 parseInt, Math.ceil, toFixed, Number.isInteger, Math.round, toString, Number, Math.random, Math.floor
 Math.pow, parseFloat, Number.isNaN

 String
 endsWith, padStart, concat, экранирование, length, indexOf, toString, Number, toUpperCase, toLowerCase
 includes, trim, repeat, replaceAll, startsWith, trimStart, конкатенация, charAt, replace, padEnd, trimEnd, split

	Object
 Object.values, Object.entries, for in, toString, JSON.parse, JSON.stringify, Object.keys

	Array
 flat, forEach, concat, map, some, unshift, length, indexOf, toString, push, pop,
 includes, reduce, find, Array.isArray, filter, shift, reverse, join


? Mistakes

Numbers		8 3 2 0 0
String		3 2 1 1 1
Object		4 3 1 1 1
Array			6 0 0 0 1
*/



//* Practice ====================================================================================================//
/*
? Numbers
		Округлить вверх
		Округлить вниз
		Округлить до целого
		Производит удаление дробной части без округления: 3.1 становится 3, а -1.1 — -1.
		Рандом
		Ищет максимум / минимум
		Возвести в степень
		возвращает квадратный корень числа
		Компенсировать погрешности
		кол-во знаков после запятой
		Привести к числу
		Привести к строке
		вернет ЦЕЛОЕ число из строки до текста
		вернет число из строки до текста c цифрами после запятой
		проверка на NaN
		строгая проверка на NaN
		проверка на целое число
		проверка на NaN/Infinity/-Infinity

? String
		возвращает длину строки
		возвращает символ под индексом
		возвращает последний символ
		возвращает от start до end
		ищет позицию слова или символы в строке. Необязательный второй аргумент позволяет начать поиск с определённой позиции.
		ищет позицию слова или символы в строке с конца
		меняет строку (не перезаписывая) 'word' - что меняем, 'another word'
		меняет все совпадения
		ищет и возвращает true or false
		принимает разделитель и разбивает строку на масив
		создаёт строку из элементов arr
		приведение к верхнему регистру
		приведение к нижнему регистру
		Привести к строке
		Повторить символ
		проверяет начинается ли строка определённой строкой
		проверяет заканчивается ли строка определённой строкой
		обрезает пробелы
		приведение к булевому значению
		дополняет начало текущей строки другой строкой (при необходимости несколько раз) до заданной длины.


? Object
		Удалить ключ и свойство
		проверка наличия свойства в объекте
		проверка наличия свойства в объекте или его прототипе
		Преобразовать объект в JSON
		Преобразовать JSON в объект
		Получить ключи в массив (первого уровня вложенности)
		Получить значения в массив (первого уровня вложенности)
		Получить значения и ключи в массив масивов
		Копирование объекта (не глубокое!!!)
		Глубокое копирование объекта


? Array
		добавляет items в конец массива.
		удаляет элемент в конце массива и возвращает его.
		добавляет items в начало массива.
		удаляет элемент в начале массива и возвращает его.
		начиная с индекса pos удаляет deleteCount элементов и вставляет items
		создаёт новый массив, копируя в него элементы с индекса start до end (не включая end)
		возвращает новый массив: копирует все члены текущего массива и добавляет к нему items

		ищет item, начиная с позиции pos, и возвращает его индекс или -1, если ничего не найдено.
		возвращает true, если в массиве имеется элемент value, в противном случае false
		отдаёт первое значение, при прохождении которых через функцию возвращается true.
		отдаёт все значения, при прохождении которых через функцию возвращается true.
		возвращает true, если функция проверки правдива хотя бы для одного элемента массива. Иначе, false.

		сортирует массив «на месте», а потом возвращает его.
		«на месте» меняет порядок следования элементов на противоположный и возвращает изменённый массив.
		преобразует вложенные массивы в один
		проверяет, является ли arr массивом









todo Answers ====================================================================================================//

? Numbers
Math.ceil()					Округлить вверх
Math.floor()				Округлить вниз
Math.round()				Округлить до целого
Math.trunc()				Производит удаление дробной части без округления: 3.1 становится 3, а -1.1 — -1.
Math.random()				Рандом
Math.max() / Math.min()		Ищет максимум / минимум
Math.pow(n, 2)			Возвести в степень
Math.sqrt(9)				возвращает квадратный корень числа
n + Number.EPSILON	Компенсировать погрешности
n.toFixed(3)				кол-во знаков после запятой
Number(str)					Привести к числу
n.toString()				Привести к строке
parseInt(n)					вернет ЦЕЛОЕ число из строки до текста
parseFloat(n)				вернет число из строки до текста c цифрами после запятой
isNaN(n)						проверка на NaN
Number.isNaN(n)			строгая проверка на NaN
Number.isInteger		проверка на целое число
Number.isFinite()		проверка на NaN/Infinity/-Infinity

? String
str.length							возвращает длину строки
str.charAt(3)						возвращает символ под индексом
str.at(-1) / str[str.length - 1]	возвращает последний символ
str.slice(start, end)		возвращает от start до end
str.indexOf('r')				ищет позицию слова или символы в строке. Необязательный второй аргумент позволяет начать поиск с определённой позиции.
str.lastIndexOf('r')		ищет позицию слова или символы в строке с конца
str.replace('r', 'R')		меняет строку (не перезаписывая) 'word' - что меняем, 'another word'
str.replaceAll('r', 'R')	меняет все совпадения
str.includes('r')				ищет и возвращает true or false
str.split(' ')					принимает разделитель и разбивает строку на масив
arr.join(',')						создаёт строку из элементов arr
str.toUpperCase()				приведение к верхнему регистру
str.toLowerCase()				приведение к нижнему регистру
n.toString()						Привести к строке
'r'.repeat(5)						Повторить символ
str.startsWith('R')			проверяет начинается ли строка определённой строкой
str.endsWith('.')				проверяет заканчивается ли строка определённой строкой
str.trim()							обрезает пробелы
Boolean(str)						приведение к булевому значению
str.padStart(8, '*')		дополняет начало текущей строки другой строкой (при необходимости несколько раз) до заданной длины.


? Object
delete obj.key					Удалить ключ и свойство
obj.hasOwnProperty('key')		проверка наличия свойства в объекте (не наследуемых!!!)
'key' in obj							проверка наличия свойства в объекте или его прототипе
JSON.stringify(obj)			Преобразовать объект в JSON
JSON.parse(str)					Преобразовать JSON в объект
Object.keys()						Получить ключи в массив (первого уровня вложенности)
Object.values()					Получить значения в массив (первого уровня вложенности)
Object.entries()				Получить значения и ключи в массив масивов
Object.assign ({}, obj)	Копирование объекта (не глубокое!!!)
JSON.parse(JSON.stringify(obj))	Глубокое копирование объекта

? Array
arr.push()							добавляет items в конец массива.
arr.pop()								удаляет элемент в конце массива и возвращает его.
arr.unshift()						добавляет items в начало массива.
arr.shift()							удаляет элемент в начале массива и возвращает его.
arr.splice(pos, del, add)	начиная с индекса pos удаляет deleteCount элементов и вставляет items
arr.slice(start, end)		создаёт новый массив, копируя в него элементы с индекса start до end (не включая end)
arr.concat(arr1, arr2, item)	возвращает новый массив: копирует все члены текущего массива и добавляет к нему items

arr.indexOf('r')				ищет item, начиная с позиции pos, и возвращает его индекс или -1, если ничего не найдено.
arr.includes('r')				возвращает true, если в массиве имеется элемент value, в противном случае false
arr.find()							отдаёт первое значение, при прохождении которых через функцию возвращается true.
arr.filter()						отдаёт все значения, при прохождении которых через функцию возвращается true.
arr.some()							возвращает true, если функция проверки правдива хотя бы для одного элемента массива. Иначе, false.

arr.sort()							сортирует массив «на месте», а потом возвращает его.
arr.reverse()						«на месте» меняет порядок следования элементов на противоположный и возвращает изменённый массив.
arr.flat(2)							преобразует вложенные массивы в один
Array.isArray(arr)			проверяет, является ли arr массивом









*Class====================================================================================================//

1. Создать класс, добавить конструктор (name, pass)
2. Добавить метод checkPass
3. Расширить класс и добавить методов
4. Добавить статические методы и свойства
5. Проверить принадлежит ли объект классу











!  ====================================================================================================//










*/
