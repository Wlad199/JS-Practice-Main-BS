/*
! Tasks ====================================================================================================//

1. Создать объект и скопировать его по ссылке,
используя Object.assign, оператор спред и JSON
Создать объект с вложенным объектом и скопировать его

2. Создать функцию, принимающую в качестве параметров объект user
и увеличивающую возраст на 1год
Не мутировать исходный объект!!!
Вернуть новый объект

3. Написать ф - ю, которая принимает в качастве параметра объект
и добавляет ему дату(урок 12.3)

4. Написать ф - ю, sumPositiveNumbers которая принимает 2 параметра a и b(урок 17.4)
и проверяет являются ли они часлами и являются ли они положительными
в случае успеха выводит сумму.В противном случае - собщение с ошибкой.
Перепимать под switch case и ?

5. Написать ф - ю, которая принимает любое число и возвращает только положительное число
Перепимать под switch case и ? (урок 18.1)

	6. Выведите в консоль "Привет, мир!" с задержкой 5 секунд
Используйте стрелочную функцию

	7. Создайте переменную и присвойте ей строку "Good Morning"
Замените "Morning" на "Evening" и присвойте результат новой переменной
Выведите значение второй переменной в консоль

	8. Написать ф - ю showMessage, принимающую 2 параметра: Сообщение и задержку и выводящую сообщ

	9. Написать ф - ю, выводящую 5 раз сообщение через setInterval

	10. Вывести в консоль кол - во элементов(через цикл и через массив ключей)
Переберите все собственные свойства объекта. (через цикл и через массив ключей)
Если имя свойства(ключ) равно "key1" или "key3", выведите значение свойства в консоль.
	const myObject = {
		key1: true,
		key5: 10,
		key3: 'abc',
		key4: null,
		key10: NaN,
	}

	11.(36st).Cгенерируйте новое 4 - значное случайное число.Диапазон для случайного числа 1000 - 9999.
	Убедитесь, что это новое случайное число не совпадает ни с одним из чисел в массиве myNumbers.
Если совпадает, вам нужно сгенерировать новое 4 - значное число.
Если совпадений нет(новый номер уникален), добавьте его в массив myNumbers.
		ВАЖНО: В решении задачи используйте функции:
	для генерации случайного числа в заданном диапазоне
	для добавления случайного числа в массив с возвратом измененного массива
	const MIN = 1000
	const MAX = 9999
	const myNumbers = [2355, 7235, 8135, 1762, 2361, 8351]

	12.(37, 42, 43).Разобраться!!!

	13. Перепишите инструкцию "if .. else" без использования "else"
Перепишите содержимое функции, используя тернарный оператор
Замените обычную функцию на стрелочную функцию
	function isArrayEmpty(inputArray) {
		if (inputArray.length > 0) {
			return 'Массив не пустой'
		} else {
			return 'Массив пустой'
		}
	}
	console.log(isArrayEmpty([1, 3]))
	console.log(isArrayEmpty([]))

	14.(39st) Создайте функцию "cityInfo" с двумя параметрами,
		которая возвращает строку "London is at the index 0 in the myCities array"
Переберите все элементы массива "myCities",
		для каждого элемента вызовите функцию "cityInfo"
и выведите в консоль результат вызова функции
	const myCities = ['London', 'New York', 'Singapore']

	15.(40st) Конвертируйте массив JSON объектов в массив объектов JavaScript
Выведите в консоль результирующий массив
Выведите в консоль "postId" второго объекта
Выведите в консоль "commentsQuantity" последнего объекта
	const postsJSON = [
		'{"postId":1355,"commentsQuantity":5}',
		'{"postId":5131,"commentsQuantity":13}',
		'{"postId":6134,"commentsQuantity":2}',
		'{"postId":2351,"commentsQuantity":8}',
	]

	16.(41st) Создайте функцию "findPostById" с двумя параметрами: ID поста и массив постов
Функция должна вернуть пост с определенным ID
Если поста с определенным ID в массиве постов нет, функция должна вернуть "undefined"
	const posts = [
		{ postId: 1355, commentsQuantity: 5 },
		{ postId: 5131, commentsQuantity: 13 },
		{ postId: 6134, commentsQuantity: 2 },
	]

	17(45st).Создайте функцию isElementInArray с двумя параметрами "searchElement" и "inputArray"
Если "searchElement" - не объект, просто используйте метод "includes"
Если "searchElement" - это объект или массив,
		вам необходимо сначала преобразовать каждый элемент "inputArray" в строку,
			а затем применить метод "includes" с аргументом, который также будет преобразован в строку
	const tags = [
		['javascript', 'es6'],
		['css', 'flexbox'],
		['html', 'web-browser'],
	]
	const fruits = [
		{ title: 'Orange', quantity: 10 },
		{ title: 'Banana', quantity: 5 },
		{ title: 'Apple', quantity: 25 },
	]

	18.(47st) Создайте функцию "popularPostsIds" с двумя параметрами "posts" и "minimalComentsQty"
Эта функция "popularPostsIds" должна возвращать массив идентификаторов постов сообщений,
		у которых количество комментариев не меньше "minimalComentsQty"
	const inputPosts = [
		{
			title: 'Как быстро выучить JavaScript?',
			postId: 3421,
			comments: 25,
		},
		{
			title: 'Где используется JavaScript?',
			postId: 5216,
			comments: 3,
		},
		{
			title: 'Какая разница между React и Angular?',
			postId: 8135,
			comments: 12,
		},
	]

	19.(48st) Использование метода "reduce" для создания объекта
Создайте функцию "quantitiesByCategories" с одним параметром "products"
Эта функция должна возвращать объект с ключами,
		равными категориям, и значениями, равными сумме всех количеств в каждой категории
	const inputProducts = [
		{
			title: 'Phone case',
			price: 23,
			quantity: 2,
			category: 'Accessories',
		},
		{
			title: 'Android phone',
			price: 150,
			quantity: 1,
			category: 'Phones',
		},
		{
			title: 'Headphones',
			price: 78,
			quantity: 1,
			category: 'Accessories',
		},
		{
			title: 'Sport Watch',
			price: 55,
			quantity: 2,
			category: 'Watches',
		},
	]

	20.(49st) Создайте функцию "sortProductsByPrice" с одним параметром "products"
Эта функция должна отсортировать входной массив товаров(Из предидущей задачи)
по цене каждого товара в порядке возрастания и вернуть отсортированный массив
Оригинальный массив должен остаться без изменений

	21.(50st) Создайте функцию "templateLiteral" с одним параметром "num"
Функция должна возвращать многострочную строку.
Ниже приведены примеры вызовов функции:
	const myNumber = 9
	console.log(templateLiteral(myNumber))
	Результат:
	Число 9.
	Это число меньше 10.
	Квадратный корень этого числа - 3.










*/